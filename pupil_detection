import cv2
import numpy as np


def resizeImg(img):

    image = cv2.imread('C:/Users/Arno/Documents/Masterarbeit/Matlab/eye_test.png', 0)
    img_grey = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)

    scalefactor = 4     # upsample factor

    pupilCenter = roughPupilCenter(image)


    img_crop = img_grey[460:650, 350:650]
    # img_crop = img_grey[pupilCenter[0]-100:pupilCenter[0]+100, pupilCenter[1]-150:pupilCenter[1]+150]
    minisize = (img_crop.shape[1]*scalefactor,img_crop.shape[0]*scalefactor)
    img_big = cv2.resize(img_crop, minisize)

    circles = cv2.HoughCircles(img_big, cv2.HOUGH_GRADIENT, 1, 100, param1=50, param2=20, minRadius=110, maxRadius=130)


    for i in circles[0, :]:
        # draw the outer circle
        cv2.circle(img_big,(i[0],i[1]),i[2],(0,255,0),2)
        # draw the center of the circle
        cv2.circle(img_big,(i[0],i[1]),2,(0,0,255),3)

        cv2.imshow('big',img_big)


    return 1


def roughPupilCenter(img):


    img_blur = cv2.blur(img, (50,50))


    #find position of darkest area
    index_y, index_x = np.where(img_blur == img_blur.min())

    #calculate center of multiple minimums
    center_coords = ([(np.amin(index_x) + np.amax(index_x)) / 2, (np.amin(index_y) + np.amax(index_y)) / 2])

    equ = cv2.equalizeHist(img_blur)

    ret, thresh2 = cv2.threshold(img_blur, 30, 255, cv2.THRESH_BINARY_INV)

    cv2.imshow('blurred',img_blur)
    cv2.imshow('tresh',thresh2)


    return center_coords
